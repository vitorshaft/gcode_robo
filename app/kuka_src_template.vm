&ACCESS RVP
&REL 9
&PARAM EDITMASK = *
&PARAM TEMPLATE = C:\\KRC\Roboter\\Template\\vorgabe
&PARAM DISKPATH = KRC:\\R1\\Program
DEF $filename ( )
EXT BAS (BAS_COMMAND :IN,REAL :IN )
INT I
;FOLD INI;%{{PE}}
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    INTERRUPT ON 3 
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
    ;Make your modifications here
  ;ENDFOLD (USER INI)
;ENDFOLD (INI)
FOR I=1 TO 6
$VEL_AXIS[I]=25
$ACC_AXIS[I]=50
ENDFOR
$VEL.CP=0.05
$VEL.ORI1=200
$VEL.ORI2=200
$ACC.ORI1=100
$ACC.ORI2=100
$APO.CDIS = 0.5000
$ORI_TYPE = #VAR
$ADVANCE = 5
PTP  XPREF
$VEL.CP=0.05  ;50mm/s
;FOLD GasInit    Gas: GasDef;%{PE}%R 6.1.22,%MKUKATPLASER,%CLSR_GAS_INIT,%VLSR_GAS_INIT,%P 3:#TECH, 5:GasDef 
Trigger When PATH = 0 DELAY=Lsr_InitGasDly DO LSR_InitGas(#TECH , GDGasDef.ProcGas , GDGasDef.RootGas , 0 ) PRIO=-1
;ENDFOLD
;FOLD LIN P4 CONT Vel=0.2 m/s CPDAT1 Tool[1]:teste_D70 Base[0];%{PE}%R 8.3.42,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P4, 3:C_DIS C_DIS, 5:0.2, 7:CPDAT1
$BWDSTART=FALSE
LDAT_ACT=LCPDAT1
FDAT_ACT=FP4
BAS(#CP_PARAMS,0.2)
LIN XP4 C_DIS C_DIS
;ENDFOLD

;FOLD LSR   INIT Allocation=False Gas: GasDef LSN: LSNDef;%{{PE}}%R 6.1.22,%MKUKATPLASER,%CLSR_INIT,%VLASER_INIT_ADV,%P 2:#TECH, 5:FALSE, 7:GasDef, 9:LSNDef, 10:False, 12:LU0 
LSR_ErrorType = #NONE
LSR_INIT_LASER (#TECH, LNLSNDef, GDGasDef, False, FALSE)
;ENDFOLD

;FOLD GasSwi Proc_Gas ON Nicht Haltend;%{{PE}}%R 6.1.22,%MKUKATPLASER,%CLSR_GAS_SWI,%VLSR_GAS_SWI,%P 3:#Proc, 5:TRUE, 7:1, 10:FALSE 
Trigger When PATH = 0 DELAY=Lsr_GasDlySwi DO LSR_Gas_Swi(#Proc , TRUE , -1 , FALSE ) PRIO=-1
;ENDFOLD
;FOLD GasSwi Root_Gas ON ;%{{PE}}%R 6.1.22,%MKUKATPLASER,%CLSR_GAS_SWI,%VLSR_GAS_SWI,%P 3:#Root, 5:TRUE, 7:1, 10:TRUE 
Trigger When PATH = 0 DELAY=Lsr_GasDlySwi DO LSR_Gas_Swi(#Root , TRUE , -1 , TRUE ) PRIO=-1
;ENDFOLD

;FOLD OUT 1 'DEPOSITOR_DE_PO_Start/Stop' State=TRUE CONT;%{{PE}}%R 8.3.42,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:DEPOSITOR_DE_PO_Start/Stop, 5:TRUE, 6:CONTINUE
CONTINUE
$OUT[1]=TRUE
;ENDFOLD
;FOLD WAIT FOR ( IN 1 'LMD_NO-ERROR' );%{{PE}}%R 8.3.42,%MKUKATPBASIS,%CEXT_WAIT_FOR,%VEXT_WAIT_FOR,%P 2:, 4:, 5:$IN, 6:1, 7:LMD_NO-ERROR, 9:
WAIT FOR  ( $IN[1] ) 
;ENDFOLD
;FOLD WAIT FOR ( IN 2 'PROCESS_STABLE' );%{{PE}}%R 8.3.42,%MKUKATPBASIS,%CEXT_WAIT_FOR,%VEXT_WAIT_FOR,%P 2:, 4:, 5:$IN, 6:2, 7:PROCESS_STABLE, 9:
WAIT FOR  ( $IN[2] ) 
;ENDFOLD

#foreach ($layer in $layers)##
;FOLD LSR   On Path=10 mm MSet=ME1 LSet=LS1;%{{PE}}%R 6.1.22,%MKUKATPLASER,%CLSR_ON,%VLSR_ON_TECH,%P 2:#TECH, 5:10, 8:1, 10:1400, 13:500, 16:ME1, 18:LS1, 20:LU0 
TRIGGER WHEN PATH=10 DELAY= LsrDelay(LSR_ShutterOn, PreDelay, GasPreFlowValue, LMME1) DO LSR_PRE_ON(#TECH, #OFF_SPL, LPLS1) PRIO=-1
TRIGGER WHEN PATH=10 DELAY=LSR_ShutterDelay DO LSR_ON(#TECH, #OFF_SPL, LMME1, LPLS1) PRIO=-1
TRIGGER WHEN PATH=10 DELAY=GasDelay(GasPreFlowValue, LMME1) DO LSR_GAS_ON(LMME1) PRIO=-1
;ENDFOLD
#foreach ($coord in $layer.lines)##
LIN XP$coord.i C_DIS C_DIS
#end##
;FOLD LSR   Switch Path=0 mm LSet=LS4;%{{PE}}%R 6.1.22,%MKUKATPLASER,%CLSR_SWI,%VLSR_SWI_TECH,%P 2:#TECH, 5:0, 8:1500, 11:60, 14:ME4, 16:LS2, 18:LU0 
TRIGGER WHEN PATH=0 DELAY=LsrDelay(0, PreDelay, GasPreFlowValue, LMDEFAULT) DO LSR_PRE_SWI(#TECH, #OFF_SPL, LPLS2) PRIO=-1
TRIGGER WHEN PATH=0 DELAY=LSR_ShutterDelay DO LSR_SWI(#TECH, #OFF_SPL, LMDEFAULT, LPLS2) PRIO=-1
;ENDFOLD
;FOLD LSR   End Path=0 mm MSet=ME4 LSet=LS3 ;%{{PE}}%R 6.1.22,%MKUKATPLASER,%CLSR_END,%VLSR_END_TECH,%P 2:#TECH, 5:0, 8:500, 11:500, 14:12, 17:ME4, 19:LS3, 21:LU0, 22:False 
TRIGGER WHEN PATH=0 DELAY=LsrOffDelay(LSR_ShutterOff, LPLS3, GasPreFlowValue, LMME1) DO LSR_PRE_OFF(#TECH, #OFF_SPL, LPLS3) PRIO=-1
TRIGGER WHEN PATH=0 DELAY=LsrDelayOff DO LSRO_LsrSync1 = FALSE
TRIGGER WHEN PATH=0 DELAY=LSR_ShutterDelay DO LSR_OFF(#TECH, #OFF_SPL, LMME1, LPLS3,  False) PRIO=-1
;ENDFOLD
#end##
;ENDFOLD
;FOLD LIN P314 CONT Vel=0.05 m/s CPDAT8 Tool[1]:teste_D70 Base[0];%{{PE}}%R 8.3.42,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P314, 3:C_DIS C_DIS, 5:0.05, 7:CPDAT8
$BWDSTART=FALSE
LDAT_ACT=LCPDAT2
FDAT_ACT=FPEND0
BAS(#CP_PARAMS,0.05)
LIN XPEND0 C_DIS C_DIS
;ENDFOLD
;FOLD OUT 1 'DEPOSITOR_DE_PO_Start/Stop' State=FALSE ;%{{PE}}%R 8.3.42,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:DEPOSITOR_DE_PO_Start/Stop, 5:FALSE, 6:
$OUT[1]=FALSE
;ENDFOLD
;FOLD PTP PEND CONT Vel=50 % PDAT4 Tool[1]:teste_D70 Base[0];%{{PE}}%R 8.3.42,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:P315, 3:C_DIS, 5:50, 7:PDAT4
$BWDSTART=FALSE
PDAT_ACT=PPDAT4
FDAT_ACT=FPEND
BAS(#PTP_PARAMS,50)
PTP XPEND C_DIS
